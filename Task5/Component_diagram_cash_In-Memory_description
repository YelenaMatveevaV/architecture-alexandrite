Объяснение изменений

1. Добавление in-memory кэшей для микросервисов :
     Каждый микросервис (Shop API, CRM API, MES API) теперь имеет собственный in-memory кэш:
          Shop API Cache
          CRM API Cache
          MES API Cache
     Эти кэши используются для хранения часто запрашиваемых данных, таких как списки заказов, статусы и другие метаданные.
2. Локальное управление кэшем :
     Каждый микросервис самостоятельно управляет своим кэшем:
          При запросе данных микросервис сначала проверяет свой in-memory кэш.
          Если данных нет в кэше, он запрашивает их из базы данных (Shop DB, MES DB) и сохраняет результат в кэш.
3. Инвалидация кэша :
     При изменении данных в базе данных микросервис инвалидирует соответствующие записи в своем in-memory кэше.
4. Пример использования :
     При запросе списка заказов:
          MES API проверяет MES API Cache.
          Если данных нет, он запрашивает их из MES DB, сохраняет результат в MES API Cache и возвращает его клиенту.
     При изменении статуса заказа:
          MES API обновляет статус в MES DB.
          После успешной записи он инвалидирует соответствующие записи в MES API Cache.
5. Преимущества нового решения
     Автономность микросервисов :
          Каждый микросервис управляет своим кэшем независимо, что снижает зависимость от общего кэша (например, Redis).
     Высокая производительность :
          Локальный in-memory кэш обеспечивает быстрый доступ к данным без сетевых задержек.
     Упрощение архитектуры :
          Устраняется необходимость в централизованном кэше (например, Redis), что упрощает архитектуру.
     Масштабируемость :
          Каждый микросервис может масштабироваться независимо, не влияя на работу других микросервисов.
6. Недостатки нового решения
     Дублирование данных :
          Одинаковые данные могут храниться в кэшах разных микросервисов, что увеличивает использование памяти.
     Риск несогласованности :
          Если данные изменяются в базе данных, но кэш не инвалидируется своевременно, могут возникнуть проблемы с актуальностью данных.
     Ограниченный объем памяти :
          Размер in-memory кэша ограничен объемом памяти микросервиса.


Заключение
Решение с in-memory кэшированием на уровне микросервисов идеально подходит для систем, где важно минимизировать задержки и обеспечить автономность работы каждого микросервиса. Оно позволяет эффективно использовать ресурсы и обеспечивает высокую производительность.